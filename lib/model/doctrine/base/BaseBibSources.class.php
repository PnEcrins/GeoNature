<?php

/**
 * BaseBibSources
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_source
 * @property string $nom_source
 * @property string $desc_source
 * @property string $host
 * @property integer $port
 * @property string $username
 * @property string $pass
 * @property string $db_name
 * @property string $db_schema
 * @property string $db_table
 * @property string $db_field
 * @property string $url
 * @property string $target
 * @property string $picto
 * @property string $groupe
 * @property boolean $actif
 * @property Doctrine_Collection $Syntheseff
 * 
 * @method integer             get()            Returns the current record's "id_source" value
 * @method string              get()            Returns the current record's "nom_source" value
 * @method string              get()            Returns the current record's "desc_source" value
 * @method string              get()            Returns the current record's "host" value
 * @method integer             get()            Returns the current record's "port" value
 * @method string              get()            Returns the current record's "username" value
 * @method string              get()            Returns the current record's "pass" value
 * @method string              get()            Returns the current record's "db_name" value
 * @method string              get()            Returns the current record's "db_schema" value
 * @method string              get()            Returns the current record's "db_table" value
 * @method string              get()            Returns the current record's "db_field" value
 * @method string              get()            Returns the current record's "url" value
 * @method string              get()            Returns the current record's "target" value
 * @method string              get()            Returns the current record's "picto" value
 * @method string              get()            Returns the current record's "groupe" value
 * @method boolean             get()            Returns the current record's "actif" value
 * @method Doctrine_Collection get()            Returns the current record's "Syntheseff" collection
 * @method BibSources          set()            Sets the current record's "id_source" value
 * @method BibSources          set()            Sets the current record's "nom_source" value
 * @method BibSources          set()            Sets the current record's "desc_source" value
 * @method BibSources          set()            Sets the current record's "host" value
 * @method BibSources          set()            Sets the current record's "port" value
 * @method BibSources          set()            Sets the current record's "username" value
 * @method BibSources          set()            Sets the current record's "pass" value
 * @method BibSources          set()            Sets the current record's "db_name" value
 * @method BibSources          set()            Sets the current record's "db_schema" value
 * @method BibSources          set()            Sets the current record's "db_table" value
 * @method BibSources          set()            Sets the current record's "db_field" value
 * @method BibSources          set()            Sets the current record's "url" value
 * @method BibSources          set()            Sets the current record's "target" value
 * @method BibSources          set()            Sets the current record's "picto" value
 * @method BibSources          set()            Sets the current record's "groupe" value
 * @method BibSources          set()            Sets the current record's "actif" value
 * @method BibSources          set()            Sets the current record's "Syntheseff" collection
 * 
 * @package    geonature
 * @subpackage model
 * @author     Gil Deluermoz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBibSources extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('synthese.bib_sources');
        $this->hasColumn('id_source', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('nom_source', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('desc_source', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('host', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('port', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('pass', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('db_name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('db_schema', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('db_table', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('db_field', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('target', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('picto', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('groupe', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('actif', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Syntheseff', array(
             'local' => 'id_source',
             'foreign' => 'id_source'));
    }
}