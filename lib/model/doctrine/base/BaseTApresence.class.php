<?php

/**
 * BaseTApresence
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $indexap
 * @property integer $codepheno
 * @property integer $indexzp
 * @property integer $surfaceap
 * @property string $id_frequence_methodo
 * @property string $id_frequence_methodo_new
 * @property integer $id_comptage_methodo
 * @property integer $frequenceap
 * @property integer $ap_pdop
 * @property integer $altitude_saisie
 * @property integer $altitude_sig
 * @property integer $altitude_retenue
 * @property timestamp $date_insert
 * @property timestamp $date_update
 * @property boolean $topo_valid
 * @property boolean $erreur_signalee
 * @property boolean $supprime
 * @property string $insee
 * @property integer $nb_transects_frequence
 * @property integer $nb_points_frequence
 * @property integer $nb_contacts_frequence
 * @property integer $nb_placettes_comptage
 * @property decimal $surface_placette_comptage
 * @property string $remarques
 * @property blob $the_geom
 * @property blob $the_geom_3857
 * @property blob $the_geom_local
 * @property TZprospection $TZprospection
 * @property BibPhenologies $BibPhenologies
 * @property BibFrequencesMethodo $BibFrequencesMethodo
 * @property BibFrequencesMethodoNew $BibFrequencesMethodoNew
 * @property BibComptagesMethodo $BibComptagesMethodo
 * @property Doctrine_Collection $CorApPerturb
 * @property Doctrine_Collection $CorApPhysionomie
 * 
 * @method integer                 get()                          Returns the current record's "indexap" value
 * @method integer                 get()                          Returns the current record's "codepheno" value
 * @method integer                 get()                          Returns the current record's "indexzp" value
 * @method integer                 get()                          Returns the current record's "surfaceap" value
 * @method string                  get()                          Returns the current record's "id_frequence_methodo" value
 * @method string                  get()                          Returns the current record's "id_frequence_methodo_new" value
 * @method integer                 get()                          Returns the current record's "id_comptage_methodo" value
 * @method integer                 get()                          Returns the current record's "frequenceap" value
 * @method integer                 get()                          Returns the current record's "ap_pdop" value
 * @method integer                 get()                          Returns the current record's "altitude_saisie" value
 * @method integer                 get()                          Returns the current record's "altitude_sig" value
 * @method integer                 get()                          Returns the current record's "altitude_retenue" value
 * @method timestamp               get()                          Returns the current record's "date_insert" value
 * @method timestamp               get()                          Returns the current record's "date_update" value
 * @method boolean                 get()                          Returns the current record's "topo_valid" value
 * @method boolean                 get()                          Returns the current record's "erreur_signalee" value
 * @method boolean                 get()                          Returns the current record's "supprime" value
 * @method string                  get()                          Returns the current record's "insee" value
 * @method integer                 get()                          Returns the current record's "nb_transects_frequence" value
 * @method integer                 get()                          Returns the current record's "nb_points_frequence" value
 * @method integer                 get()                          Returns the current record's "nb_contacts_frequence" value
 * @method integer                 get()                          Returns the current record's "nb_placettes_comptage" value
 * @method decimal                 get()                          Returns the current record's "surface_placette_comptage" value
 * @method string                  get()                          Returns the current record's "remarques" value
 * @method blob                    get()                          Returns the current record's "the_geom" value
 * @method blob                    get()                          Returns the current record's "the_geom_3857" value
 * @method blob                    get()                          Returns the current record's "the_geom_local" value
 * @method TZprospection           get()                          Returns the current record's "TZprospection" value
 * @method BibPhenologies          get()                          Returns the current record's "BibPhenologies" value
 * @method BibFrequencesMethodo    get()                          Returns the current record's "BibFrequencesMethodo" value
 * @method BibFrequencesMethodoNew get()                          Returns the current record's "BibFrequencesMethodoNew" value
 * @method BibComptagesMethodo     get()                          Returns the current record's "BibComptagesMethodo" value
 * @method Doctrine_Collection     get()                          Returns the current record's "CorApPerturb" collection
 * @method Doctrine_Collection     get()                          Returns the current record's "CorApPhysionomie" collection
 * @method TApresence              set()                          Sets the current record's "indexap" value
 * @method TApresence              set()                          Sets the current record's "codepheno" value
 * @method TApresence              set()                          Sets the current record's "indexzp" value
 * @method TApresence              set()                          Sets the current record's "surfaceap" value
 * @method TApresence              set()                          Sets the current record's "id_frequence_methodo" value
 * @method TApresence              set()                          Sets the current record's "id_frequence_methodo_new" value
 * @method TApresence              set()                          Sets the current record's "id_comptage_methodo" value
 * @method TApresence              set()                          Sets the current record's "frequenceap" value
 * @method TApresence              set()                          Sets the current record's "ap_pdop" value
 * @method TApresence              set()                          Sets the current record's "altitude_saisie" value
 * @method TApresence              set()                          Sets the current record's "altitude_sig" value
 * @method TApresence              set()                          Sets the current record's "altitude_retenue" value
 * @method TApresence              set()                          Sets the current record's "date_insert" value
 * @method TApresence              set()                          Sets the current record's "date_update" value
 * @method TApresence              set()                          Sets the current record's "topo_valid" value
 * @method TApresence              set()                          Sets the current record's "erreur_signalee" value
 * @method TApresence              set()                          Sets the current record's "supprime" value
 * @method TApresence              set()                          Sets the current record's "insee" value
 * @method TApresence              set()                          Sets the current record's "nb_transects_frequence" value
 * @method TApresence              set()                          Sets the current record's "nb_points_frequence" value
 * @method TApresence              set()                          Sets the current record's "nb_contacts_frequence" value
 * @method TApresence              set()                          Sets the current record's "nb_placettes_comptage" value
 * @method TApresence              set()                          Sets the current record's "surface_placette_comptage" value
 * @method TApresence              set()                          Sets the current record's "remarques" value
 * @method TApresence              set()                          Sets the current record's "the_geom" value
 * @method TApresence              set()                          Sets the current record's "the_geom_3857" value
 * @method TApresence              set()                          Sets the current record's "the_geom_local" value
 * @method TApresence              set()                          Sets the current record's "TZprospection" value
 * @method TApresence              set()                          Sets the current record's "BibPhenologies" value
 * @method TApresence              set()                          Sets the current record's "BibFrequencesMethodo" value
 * @method TApresence              set()                          Sets the current record's "BibFrequencesMethodoNew" value
 * @method TApresence              set()                          Sets the current record's "BibComptagesMethodo" value
 * @method TApresence              set()                          Sets the current record's "CorApPerturb" collection
 * @method TApresence              set()                          Sets the current record's "CorApPhysionomie" collection
 * 
 * @package    geonature
 * @subpackage model
 * @author     Gil Deluermoz
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTApresence extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('florepatri.t_apresence');
        $this->hasColumn('indexap', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('codepheno', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('indexzp', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('surfaceap', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('id_frequence_methodo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => 1,
             ));
        $this->hasColumn('id_frequence_methodo_new', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('id_comptage_methodo', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 1,
             'length' => 2,
             ));
        $this->hasColumn('frequenceap', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('ap_pdop', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('altitude_saisie', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('altitude_sig', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('altitude_retenue', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('date_insert', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('date_update', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('topo_valid', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             ));
        $this->hasColumn('erreur_signalee', 'boolean', 1, array(
             'type' => 'boolean',
             'length' => 1,
             ));
        $this->hasColumn('supprime', 'boolean', 1, array(
             'type' => 'boolean',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('insee', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             ));
        $this->hasColumn('nb_transects_frequence', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nb_points_frequence', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nb_contacts_frequence', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('nb_placettes_comptage', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('surface_placette_comptage', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('remarques', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('the_geom', 'blob', null, array(
             'type' => 'blob',
             'length' => '',
             ));
        $this->hasColumn('the_geom_3857', 'blob', null, array(
             'type' => 'blob',
             'length' => '',
             ));
        $this->hasColumn('the_geom_local', 'blob', null, array(
             'type' => 'blob',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TZprospection', array(
             'local' => 'indexzp',
             'foreign' => 'indexzp'));

        $this->hasOne('BibPhenologies', array(
             'local' => 'codepheno',
             'foreign' => 'codepheno'));

        $this->hasOne('BibFrequencesMethodo', array(
             'local' => 'id_frequence_methodo',
             'foreign' => 'id_frequence_methodo'));

        $this->hasOne('BibFrequencesMethodoNew', array(
             'local' => 'id_frequence_methodo_new',
             'foreign' => 'id_frequence_methodo_new'));

        $this->hasOne('BibComptagesMethodo', array(
             'local' => 'id_comptage_methodo',
             'foreign' => 'id_comptage_methodo'));

        $this->hasMany('CorApPerturb', array(
             'local' => 'indexap',
             'foreign' => 'indexap'));

        $this->hasMany('CorApPhysionomie', array(
             'local' => 'indexap',
             'foreign' => 'indexap'));
    }
}